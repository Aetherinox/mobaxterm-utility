//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MobaXtermKG.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MobaXtermKG.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Educational purposes only. No ads, no music, no bullshit..
        /// </summary>
        internal static string about_hdr_desc {
            get {
                return ResourceManager.GetString("about_hdr_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GPG KeyID.
        /// </summary>
        internal static string about_lbl_gpg {
            get {
                return ResourceManager.GetString("about_lbl_gpg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digital Signature Thumbprint.
        /// </summary>
        internal static string about_lbl_thumbprint {
            get {
                return ResourceManager.GetString("about_lbl_thumbprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Github Repo.
        /// </summary>
        internal static string about_lnk_github {
            get {
                return ResourceManager.GetString("about_lnk_github", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TPB Profile.
        /// </summary>
        internal static string about_lnk_tpb {
            get {
                return ResourceManager.GetString("about_lnk_tpb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap bch {
            get {
                object obj = ResourceManager.GetObject("bch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap bg_header {
            get {
                object obj = ResourceManager.GetObject("bg_header", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap btc {
            get {
                object obj = ResourceManager.GetObject("btc", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Generate.
        /// </summary>
        internal static string btn_generate {
            get {
                return ResourceManager.GetString("btn_generate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Copy.
        /// </summary>
        internal static string btn_generate_copy {
            get {
                return ResourceManager.GetString("btn_generate_copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Save Keyfile.
        /// </summary>
        internal static string btn_savekeyfile {
            get {
                return ResourceManager.GetString("btn_savekeyfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Abort.
        /// </summary>
        internal static string btn_template_abort {
            get {
                return ResourceManager.GetString("btn_template_abort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Cancel.
        /// </summary>
        internal static string btn_template_cancel {
            get {
                return ResourceManager.GetString("btn_template_cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Ignore.
        /// </summary>
        internal static string btn_template_ignore {
            get {
                return ResourceManager.GetString("btn_template_ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;No.
        /// </summary>
        internal static string btn_template_no {
            get {
                return ResourceManager.GetString("btn_template_no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;OK.
        /// </summary>
        internal static string btn_template_ok {
            get {
                return ResourceManager.GetString("btn_template_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Retry.
        /// </summary>
        internal static string btn_template_retry {
            get {
                return ResourceManager.GetString("btn_template_retry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Yes.
        /// </summary>
        internal static string btn_template_yes {
            get {
                return ResourceManager.GetString("btn_template_yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chat {
            get {
                object obj = ResourceManager.GetObject("chat", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap error {
            get {
                object obj = ResourceManager.GetObject("error", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap eth {
            get {
                object obj = ResourceManager.GetObject("eth", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap exclamation {
            get {
                object obj = ResourceManager.GetObject("exclamation", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap information {
            get {
                object obj = ResourceManager.GetObject("information", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BCH.
        /// </summary>
        internal static string lbl_contrib_bch {
            get {
                return ResourceManager.GetString("lbl_contrib_bch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BTC.
        /// </summary>
        internal static string lbl_contrib_btc {
            get {
                return ResourceManager.GetString("lbl_contrib_btc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ETH.
        /// </summary>
        internal static string lbl_contrib_eth {
            get {
                return ResourceManager.GetString("lbl_contrib_eth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon mobaxterm_128 {
            get {
                object obj = ResourceManager.GetObject("mobaxterm_128", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] mobaxterm_cli {
            get {
                object obj = ResourceManager.GetObject("mobaxterm_cli", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap mobaxterm_logo_1 {
            get {
                object obj = ResourceManager.GetObject("mobaxterm_logo_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This program requires it being ran as admin. Right-click on the program and select &quot;Run As Admin&quot;..
        /// </summary>
        internal static string msgbox_core_runas_msg {
            get {
                return ResourceManager.GetString("msgbox_core_runas_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requires Admin.
        /// </summary>
        internal static string msgbox_core_runas_title {
            get {
                return ResourceManager.GetString("msgbox_core_runas_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to    {0}.
        /// </summary>
        internal static string msgbox_debug_callfunc_msg {
            get {
                return ResourceManager.GetString("msgbox_debug_callfunc_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function Called.
        /// </summary>
        internal static string msgbox_debug_callfunc_title {
            get {
                return ResourceManager.GetString("msgbox_debug_callfunc_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to disable debug logging?.
        /// </summary>
        internal static string msgbox_debug_egg_disable_msg {
            get {
                return ResourceManager.GetString("msgbox_debug_egg_disable_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Debug Logging?.
        /// </summary>
        internal static string msgbox_debug_egg_disable_title {
            get {
                return ResourceManager.GetString("msgbox_debug_egg_disable_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to enable debug logging?
        ///
        ///All logs will be stored in the location:
        ///     {0}.
        /// </summary>
        internal static string msgbox_debug_egg_enable_msg {
            get {
                return ResourceManager.GetString("msgbox_debug_egg_enable_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Debug Logging?.
        /// </summary>
        internal static string msgbox_debug_egg_enable_title {
            get {
                return ResourceManager.GetString("msgbox_debug_egg_enable_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Located {0} with Windows Env Var in:
        ///
        ///{1}.
        /// </summary>
        internal static string msgbox_debug_fpath_env_c1_msg {
            get {
                return ResourceManager.GetString("msgbox_debug_fpath_env_c1_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug: 1000C-1.
        /// </summary>
        internal static string msgbox_debug_fpath_env_c1_title {
            get {
                return ResourceManager.GetString("msgbox_debug_fpath_env_c1_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Located {0} with Windows Env Var in:
        ///
        ///{1}.
        /// </summary>
        internal static string msgbox_debug_fpath_env_c2_msg {
            get {
                return ResourceManager.GetString("msgbox_debug_fpath_env_c2_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug: 1000C-2.
        /// </summary>
        internal static string msgbox_debug_fpath_env_c2_title {
            get {
                return ResourceManager.GetString("msgbox_debug_fpath_env_c2_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Located {0} In:
        ///
        ///{1}.
        /// </summary>
        internal static string msgbox_debug_fpath_msg {
            get {
                return ResourceManager.GetString("msgbox_debug_fpath_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Located {0} with Powershell in:
        ///
        ///{1}.
        /// </summary>
        internal static string msgbox_debug_fpath_ps_msg {
            get {
                return ResourceManager.GetString("msgbox_debug_fpath_ps_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug: 1000B.
        /// </summary>
        internal static string msgbox_debug_fpath_ps_title {
            get {
                return ResourceManager.GetString("msgbox_debug_fpath_ps_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug: 1000A.
        /// </summary>
        internal static string msgbox_debug_fpath_title {
            get {
                return ResourceManager.GetString("msgbox_debug_fpath_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        internal static string msgbox_debug_ps_output_msg {
            get {
                return ResourceManager.GetString("msgbox_debug_ps_output_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug: PowerShell Output.
        /// </summary>
        internal static string msgbox_debug_ps_output_title {
            get {
                return ResourceManager.GetString("msgbox_debug_ps_output_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify a name for the license key to be generated for..
        /// </summary>
        internal static string msgbox_err_gen_missname_msg {
            get {
                return ResourceManager.GetString("msgbox_err_gen_missname_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Name Specified.
        /// </summary>
        internal static string msgbox_err_gen_missname_title {
            get {
                return ResourceManager.GetString("msgbox_err_gen_missname_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not locate {0}. Try placing the keygen file {1} in the same folder as the {0} program executable.
        ///
        ///The next dialog will allow you to simply save the license file {2}
        ///
        ///You&apos;ll need to copy/paste the saved {2} file into the MobaXterm installation folder..
        /// </summary>
        internal static string msgbox_err_locate_msg {
            get {
                return ResourceManager.GetString("msgbox_err_locate_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid Path to {0}.
        /// </summary>
        internal static string msgbox_err_locate_title {
            get {
                return ResourceManager.GetString("msgbox_err_locate_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate a required library file:
        ///   {0}
        ///
        ///Add the missing library file and restart the program..
        /// </summary>
        internal static string msgbox_err_misslib_msg {
            get {
                return ResourceManager.GetString("msgbox_err_misslib_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal Error.
        /// </summary>
        internal static string msgbox_err_misslib_title {
            get {
                return ResourceManager.GetString("msgbox_err_misslib_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License generation has been cancelled..
        /// </summary>
        internal static string msgbox_generate_cancel_msg {
            get {
                return ResourceManager.GetString("msgbox_generate_cancel_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation Cancelled.
        /// </summary>
        internal static string msgbox_generate_cancel_title {
            get {
                return ResourceManager.GetString("msgbox_generate_cancel_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find {0}, so I can&apos;t open the folder.
        ///
        ///If you&apos;re sure it is installed, run the patcher and it will allow you to select the location. 
        ///
        ///The following locations were searched:
        ///{1}.
        /// </summary>
        internal static string msgbox_nolocate_cannot_open_msg {
            get {
                return ResourceManager.GetString("msgbox_nolocate_cannot_open_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Not Found.
        /// </summary>
        internal static string msgbox_nolocate_cannot_open_title {
            get {
                return ResourceManager.GetString("msgbox_nolocate_cannot_open_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License key has been successfully generated in:
        ///
        ///{0}.
        /// </summary>
        internal static string msgbox_ok_generate_finished_msg {
            get {
                return ResourceManager.GetString("msgbox_ok_generate_finished_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Key Generated.
        /// </summary>
        internal static string msgbox_ok_generate_finished_title {
            get {
                return ResourceManager.GetString("msgbox_ok_generate_finished_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you wish to generate a new license key for MobaXterm?.
        /// </summary>
        internal static string msgbox_ok_generate_msg {
            get {
                return ResourceManager.GetString("msgbox_ok_generate_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate License File?.
        /// </summary>
        internal static string msgbox_ok_generate_title {
            get {
                return ResourceManager.GetString("msgbox_ok_generate_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update v{0} is available.
        ///
        ///Updates ensure this patch works with the latest version {1}. If you have issues using this tool, download the latest version in the top menu: Help ► Updates
        ///
        ///Would you like to view the update? If not, program will start as normal..
        /// </summary>
        internal static string msgbox_update_msg {
            get {
                return ResourceManager.GetString("msgbox_update_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Available: {0} ► {1}.
        /// </summary>
        internal static string msgbox_update_title {
            get {
                return ResourceManager.GetString("msgbox_update_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap notify_01 {
            get {
                object obj = ResourceManager.GetObject("notify_01", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This program will generate a.
        /// </summary>
        internal static string parent_intro_1 {
            get {
                return ResourceManager.GetString("parent_intro_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to license file which will be placed inside the install path of MobaXterm..
        /// </summary>
        internal static string parent_intro_3 {
            get {
                return ResourceManager.GetString("parent_intro_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap question {
            get {
                object obj = ResourceManager.GetObject("question", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License generated..
        /// </summary>
        internal static string status_action_generated {
            get {
                return ResourceManager.GetString("status_action_generated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the folder where {0} is installed.
        /// </summary>
        internal static string status_btn_openfolder {
            get {
                return ResourceManager.GetString("status_btn_openfolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key generation cancelled by user.
        /// </summary>
        internal static string status_diag_cancelled {
            get {
                return ResourceManager.GetString("status_diag_cancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press Generate to create license key ....
        /// </summary>
        internal static string status_genlicense {
            get {
                return ResourceManager.GetString("status_genlicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Critical error -- restart keygen.
        /// </summary>
        internal static string status_misslib_critical_fail {
            get {
                return ResourceManager.GetString("status_misslib_critical_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} already running.
        /// </summary>
        internal static string status_service_already_running {
            get {
                return ResourceManager.GetString("status_service_already_running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} not started.
        /// </summary>
        internal static string status_service_not_started {
            get {
                return ResourceManager.GetString("status_service_not_started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarting Service {0}.
        /// </summary>
        internal static string status_service_restart_begin {
            get {
                return ResourceManager.GetString("status_service_restart_begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed restarting service {0}.
        /// </summary>
        internal static string status_service_restart_fail {
            get {
                return ResourceManager.GetString("status_service_restart_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not start service {0}.
        /// </summary>
        internal static string status_service_start_fail {
            get {
                return ResourceManager.GetString("status_service_start_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service {0} started.
        /// </summary>
        internal static string status_service_start_success {
            get {
                return ResourceManager.GetString("status_service_start_success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutting down task {0} ....
        /// </summary>
        internal static string status_task_stop {
            get {
                return ResourceManager.GetString("status_task_stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutting down tasks for {0} ....
        /// </summary>
        internal static string status_task_stop_app {
            get {
                return ResourceManager.GetString("status_task_stop_app", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not kill {0}.
        /// </summary>
        internal static string status_taskkill_fail {
            get {
                return ResourceManager.GetString("status_taskkill_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not restart task {0}.
        /// </summary>
        internal static string status_taskkill_fail_cmd {
            get {
                return ResourceManager.GetString("status_taskkill_fail_cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not kill task {0}.
        /// </summary>
        internal static string status_taskkill_fail_proc {
            get {
                return ResourceManager.GetString("status_taskkill_fail_proc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped service {0} ....
        /// </summary>
        internal static string status_taskkill_succ {
            get {
                return ResourceManager.GetString("status_taskkill_succ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter name to appear on license (required).
        /// </summary>
        internal static string status_txt_name_mouseover {
            get {
                return ResourceManager.GetString("status_txt_name_mouseover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter number of users license is good for. Default:.
        /// </summary>
        internal static string status_txt_users_mouseover {
            get {
                return ResourceManager.GetString("status_txt_users_mouseover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter version you are running. Default:.
        /// </summary>
        internal static string status_txt_version_mouseover {
            get {
                return ResourceManager.GetString("status_txt_version_mouseover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I do this because I enjoy giving back, and I&apos;m not looking to make a profit off my work. However, donations would help immensely for one purpose -- purchasing libraries and other commercial products which have insane licensing systems. These types of products would make life much easier and get releases pumped out on a more regular basis. Don&apos;t feel obligated, this is just &quot;if you can&quot;. My main goal is better tools..
        /// </summary>
        internal static string txt_contrib_intro {
            get {
                return ResourceManager.GetString("txt_contrib_intro", resourceCulture);
            }
        }
    }
}
